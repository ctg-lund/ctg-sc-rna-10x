#!/bin/bash

#####################
# sc-rna-10x driver #
#####################

### This script will 
### * Run the sc-rna-10x pipeline on data in current runfolder
### * Modify standard nextflow.config to project specific 
### * Generate project folder in shared/ctg-delivery/sc-rna-10x
###  -> Here it will store nextflow.config, nf-pipeline, samplesheet in ctg-log 
###  -> Write pipeline output 
### * nf-Pipeline writes qc to shared/ctg-qc/sc-rna-10x

# Initialize variables
runfolder=$(pwd)
run=$(basename $runfolder)
demux="y"
resume='n'
index='dual'
version='deployed'

# Set directories
ctgproj="/projects/fs1/shared/ctg-projects/sc-rna-10x/"
ctgqc="/projects/fs1/shared/ctg-qc/sc-rna-10x/"
ctgdelivery="/projects/fs1/shared/ctg-delivery/sc-rna-10x/"
ctgpipe="/projects/fs1/shared/ctg-pipelines/ctg-sc-rna-10x/"

# usage message 
usage() {

    echo ""
    echo "Usage: sc-rna-10x [ -v CTG-PIPELINE-VERSION ] [ -i META_ID ] [ -s SAMPLESHEET ] [ -a INDEX-TYPE ] [ -b BCL2FASTQ-ARG ] [ -r RESUME ] [ -c CUSTOM-GENOME ] [ -d DEMUX-OFF ] [ -h HELP ] "  1>&2
    echo ""
    echo ""
    echo "Optional arguments: "
    echo "VERSION       -v : Set specific version to run of the nextflow pipeline. Default will run current deployed version (in /shared/ctg-pipelines/ctg-sc-rna-10x/. If set to '-r 2' it will run v2, which is in -pipelines/ctg-sc-rna-10x/v2. If -v X it will choose -pipelines/ctg-sc-rna-10x/vX"
    echo "META-ID       -i : Set 'meta-id' for runfolder (e.g. 210330-10x). Default: Takes date of runfolder + run ID in runfolder name and adds sc-rna-10x as suffix. E.g. '210330_A00681_0334_AHWFKTDMXX' becomes 210330_0334-sc-rna-10x "
    echo "SAMPLESHEET   -s : Set samplesheet used for run (Default: CTG_SampleSheet.sc-rna-10x.csv) "
    echo "INDEX-TYPE    -a : Set -a if single index uses. (Default: dual) "  
    echo "BCL2FASTQ-ARG -b : String with bcl2fastq argument. e.g. '--minimum-trimmed-read-length 20 --mask-short-adapter-reads 20' "
    echo "RESUME        -r : Set if to resume nf-pipeline"
    echo "CUSTOM-GENOME -c : Path to custom reference genome if needed. Skip if human/mouse defined in samplesheet "
    echo "DEMUX-OFF     -d : Set flag to skip mkfastq (then fastq must be in FQDIR) "
    echo "HELP          -h : print help message" 
   
}

exit_abnormal() {
    usage
    exit 1
}

# Read and control input arguments 
while getopts i:s:v:b:ac:rdh opt; do
    case $opt in
	v) version=$OPTARG
	    ;;
	i) id=$OPTARG
	    ;;
	s) sheet=$OPTARG
	    ;;
	a) index="single"
	    ;;
	b) b2farg=$OPTARG
	    ;;
	r) resume="y"
	    ;;
	c) custom_genome=$OPTARG
	    ;;
	d) demux="n"
	    ;;
	h) exit_abnormal
	    ;;
	\?) echo "> Error: Invalid option -$OPTARG" >&2
	    exit_abnormal ;;
	:) echo "> Error: -${OPTARG} requires an argument: -i needs project-id and -s need samplesheet name! "
	    exit_abnormal ;;
    esac
done

## Check arguments
shift "$(( OPTIND -1 ))"

# Check samplesheet name
if [ -z $sheet ]; then
    echo ""; echo "> WARNING! No samplesheet specified"
    sheet="CTG_SampleSheet.sc-rna-10x.csv"
    echo "- Using 'CTG_SampleSheet.sc-rna-10x.csv'"
    if [ ! -f $sheet ]; then
	echo "> Error: CTG_SampleSheet.csv does not exist (in current dir)"
	echo "- Please specify correct samplesheet, or create a CTG_SampleSheet.sc-rna-10x.csv in current runfolder"
	exit_abnormal
    fi
fi

# Check meta-id - assign project number if not specified
if [ -z $id ]; then
    echo "> No meta-ID specified"
    metaid=$(grep "metaid" $sheet | cut -f2 -d"," | tr -d '\n\r')
    if [ -z $metaid ]; then
	metaid=$(echo $run | cut -f1,3 -d"_")
	id="${metaid}-sc-rna-10x"
    else
	id="${metaid}"
    fi
    echo "- Using: '${id}'"
fi
projdir="$ctgproj/$id/"

# If running without demux, get fastqpath from samplesheet
if [[ $demux == "n" ]]; then
    echo "> Fetching fastq path from samplesheet"
    fastqpath=$(grep "fastqpath" $sheet | cut -f2 -d"," | tr -d '\n\r')
    echo "- fastqpath fetched: $fastqpath"
    if [ ! -d $fastqpath ]; then
	echo ">> ERROR: fastqpath '$fastqpath' does not exist"
    else
	echo " - path exists.."
    fi
else
    fastqpath="\${outdir}/${id}-mkfastq"
fi

# Check if meta-ID already exist
if [ "$resume" == 'n' ] && [ -d $projdir ]; then
    # Prompt user to approve overwriting current sc-rna-10x project-folder
    read -p "> WARNING: $id has been used before:

The following directories already exist:
- $projdir
- $ctgqc/$id 
- $ctgdelivery/$id 


Do you want to overwrite these folders? 

(y/n)  ... : " prompt
    if [[ $prompt != "y" ]]
    then 
	echo "> Exiting: Please provide new [ -i metaID ] !"
	exit_abnormal
    else
	echo "> Deleting content of the folders.. "
	rm -r $projdir/*
	rm -r $ctgqc/$id/*
	rm -r $ctgdelivery/$id/*
    fi
else
    echo "> Proceeding with project '$id' "
fi

################
# Set up files #
################

# Creating project dir for logging pipeline
mkdir -p $projdir

# Copy nextflow script and config to project folder
if [ $version == "deployed" ]; then
    piperoot="$ctgpipe"
else
    piperoot="$ctgpipe/v${version}"
fi

nf_pipe="${piperoot}/pipe-sc-rna-10x.nf"
nf_config="${piperoot}/nextflow.config"
nf_bin="${piperoot}/bin/"

cp $nf_pipe $projdir
cp $nf_config $projdir
cp -r $nf_bin $projdir

# Edit config file
proj_conf=$projdir/nextflow.config
sed "s/xmetaidx/$id/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
sed "s|xrunfolderx|$runfolder|g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
sed "s/xsamplesheetx/$sheet/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
sed "s/xbcl2fastqargx/$b2farg/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
sed "s/xindextypex/$index/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
if [ ! -z $custom_genome ]; then
    sed "s/xcustomgenomex/$custom_genome/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
fi
if [ $demux == "y" ];then
    sed "s/xdemuxx/y/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
else
    sed "s/xdemuxx/n/g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf
fi
sed "s|xfastqdirx|$fastqpath|g" $proj_conf > tmp.txt; mv tmp.txt $proj_conf

# Copy edited config to runfolder
cp $proj_conf $runfolder/$id.nextflow.config
# Copy samplesheet to project folder (ctg-projects..)
cp $sheet $projdir


##############
# Print info #
##############
echo ""
echo "> The following arguments are chosen:"
echo "sc-rna-10x version : $version"  
echo "Pipeline           : $nf_pipe"
echo "ID                 : $id"
echo "Runfolder          : $runfolder " 
echo "Sheet              : $sheet"
echo "Index-type         : ${index}-index"
echo "Bcl2fastq arg      : '$b2farg'"
if [ -z $custom_genome ]; then
    echo "Custom Genome      : NONE "
else
    echo "Custom Genome      : $custom_genome "
fi
if [ $demux == "y" ]; then
    echo "Demux              : YES "
else
    echo "Demux              : NO "
    echo "- fastqpath        : $fastqpath "
fi
if [ $resume == "y" ]; then
    echo "Resume             : YES "
else
    echo "Resume             : NO "
fi

echo ""
echo "Runfolder          : $runfolder "
echo "Project Logfolder  : $projdir"
echo "QC Logfolder       : $ctgqc/$id"
echo "Output             : $ctgdelivery/$id"
echo ""

if [[ $demux == "y" ]]; then
    echo "Runfolder          : $runfolder "
    # Prompt user to approve running in current directory and input
    read -p "> WARNING: Can only be run from within runfolder! 

- Are you in runfolder in which you want run? 
- And is input described above correct ?  

(y/n)  ... : " prompt
    if [[ $prompt != "y" ]]
    then 
	echo "> Exiting: Go to runfolder!"
	exit 0
    fi

# If running without demux, does not have to be executed from runfolder 
elif [[ $demux == "n" ]]; then
    echo "execution folder   : $runfolder "
    echo "fastq-path         : $fastqpath "
    # Prompt user to approve running in current directory and input
    read -p "> WARNING: Running without demux, so this program does not have to be executed from runfolder.

- And is input described above correct ?  

(y/n)  ... : " prompt
    if [[ $prompt != "y" ]]
    then 
	echo "> Exiting..!"
	exit 0
    fi
fi

#####################
# Start nf-pipeline #
#####################

# Go to ctg-project folder to execute pipeline
cd $projdir

if [ $resume == "y" ]; then
    nohup nextflow run $nf_pipe -resume > log.nf.sc-rna-10x.$id &
else
    nohup nextflow run $nf_pipe > log.nf.sc-rna-10x.$id &
fi
echo ; echo 
echo "#################################"
echo "# sc-rna-10x pipeline submitted #"
echo "#################################"
echo ; echo 





